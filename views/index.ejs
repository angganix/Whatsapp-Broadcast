<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Whatsapp Web (Unofficial) - Demo Example</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        [v-cloak] {
            display: none;
        }
    </style>
</head>
<body>
    <input type="hidden" id="base-url" value="<%= baseUrl %>" />
    <input type="hidden" id="api-url" value="<%= apiUrl %>" />
    <input type="hidden" id="api-token" value="<%= token %>" />
    <div id="app" class="container min-vh-100 py-4" v-cloak>
        <div v-if="state.status !== 'ready' && state.status !== 'authenticated'" class="min-vh-100 d-flex flex-column justify-content-center align-items-center gap-2">
            <img src="https://png.pngtree.com/png-vector/20221018/ourmid/pngtree-whatsapp-mobile-software-icon-png-image_6315991.png" alt="" class="img-fluid mb-3" width="80">
            <template v-if="state.status === 'qrcode'">
                <img :src="state.message" alt="" class="img-fluid shadow rounded-3">
            </template>
            <h5 class="d-flex gap-1 align-items-center justify-content-center mt-3 text-center">
                {{ state.status === 'qrcode' ? "Scan QR Code di atas menggunakan Ponsel" : state?.message }}
            </h5>
        </div>
        <div v-else>
            <h5>Kirim Pesan Whatsapp</h5>
            <form @submit.prevent="sendMessage">
                <label for="gambar" class="form-label">Gambar <small>(optional)</small></label>
                <input :disabled="loading" type="file" class="form-control mb-3" id="gambar" placeholder="Pilih Gambar (optional)" @input="onFileChange" >

                <label for="caption" class="form-label">Caption <small><a href="https://faq.whatsapp.com/539178204879377/?helpref=uf_share" target="_blank">Lihat panduan markdown</a></small></label>
                <textarea :disabled="loading" type="text" style="resize:none" id="caption" v-model="form.caption" class="form-control mb-3" rows="8"></textarea>

                <label for="penerima" class="form-label">Penerima</label>
                <textarea :disabled="loading" class="form-control mb-3" style="resize: none;" id="penerima" placeholder="No. HP dipisahkan dengan koma" v-model="form.penerima" rows="5"></textarea>

                <button type="submit" class="btn btn-primary w-100" :disabled="loading">
                    {{ loading ? "Mengirimkan Pesan" : "Kirim Pesan" }}
                </button>
            </form>
            <hr class="mt-4 mb-3" />
            <h5>Riwayat Pengiriman Pesan</h5>
            <div v-if="histories.length">
                <div class="d-flex flex-column gap-2">
                    <div v-for="history in histories" :key="history?.id" :id="`history-${history?.id}`" class="card shadow-sm rounded-3">
                        <div class="d-flex align-items-center justify-content-between card-body">
                            <span class="d-flex align-items-center gap-2">
                                <span>{{ history?.jumlahTerkirim !== history?.jumlahPenerima ? "⏳" : "✅" }}</span>
                                <strong>{{ history?.jumlahTerkirim }}</strong> / <strong>{{ history?.jumlahPenerima }}</strong>
                            </span>
                            <span>
                                <time>{{ history?.waktu }}</time>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div v-else class="alert alert-primary">
                <h5 class="alert-title text-center">Belum ada riwayat</h5>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script type="module">
        import { io } from "https://cdn.socket.io/4.8.1/socket.io.esm.min.js";

        var socket = io(document.getElementById("base-url").value);

        var api = axios.create({
            baseURL: document.getElementById("api-url").value,
            timeout: 60000,
            headers: {
                Authorization: `Bearer ${document.getElementById("api-token").value}`
            }
        });

        var Toast = Swal.mixin({
            toast: true,
            icon: "info",
            timer: 3000,
            position: "bottom",
            showConfirmButton: false,
            timerProgressBar: true
        });

        const app = Vue.createApp({
            setup() {
                const state = Vue.ref({
                    status: "loading",
                    message: "Loading..."
                });
                const qrcode = Vue.ref(null);
                const form = Vue.ref({
                    caption: "",
                    gambar: null,
                    penerima: ""
                });
                const loading = Vue.ref(false);
                const histories = Vue.ref([]);

                // Kirim pesan whatsapp
                const sendMessage = async () => {
                    loading.value = true;
                    try {
                        const dataForm = new FormData();
                        for (const [key, value] of Object.entries(form.value)) {
                            dataForm.append(key, value);
                        }
                        const result = await api.post(`/whatsapp/broadcast`, dataForm, {
                            headers: {
                                "Content-Type": "multipart/form-data"
                            }
                        });
                        Toast.fire({
                            icon: "success",
                            text: result?.data?.message
                        });
                        form.value = {
                            caption: "",
                            gambar: null,
                            penerima: ""
                        }
                        loading.value = false;
                    } catch (err) {
                        Toast.fire({
                            icon: "error",
                            text: err?.response?.data?.error || err?.message,
                            timer: 5000
                        });
                    } finally {
                        getBroadcastHistories();
                    }
                }

                // Set gambar jika di input oleh user
                const onFileChange = (event) => {
                    const file = event.target.files[0];
                    form.value.gambar = file;
                }

                // Dapatkan riwayat broadcast 10 data terbaru setiap 3 detik
                const getBroadcastHistories = async () => {
                    try {
                        const result = await api.get(`/whatsapp/broadcast/history`);
                        histories.value = result?.data?.data || [];
                    } catch (err) {
                        Toast.fire({
                            icon: "error",
                            text: err?.response?.data?.error || err?.message
                        });
                    }
                }

                const updateHistoryItemData = (data) => {
                    const { broadcastId, sentCount } = data;
                    histories.value = histories.value.map(item => {
                        if (item?.id === broadcastId) {
                            return {
                                ...item,
                                jumlahTerkirim: sentCount
                            }
                        }
                        return item;
                    });
                }
                
                Vue.onMounted(() => {
                    getBroadcastHistories();

                    socket.on("whatsappState", (data) => {
                        if (data?.status !== "loading") {
                            state.value = data;
                        }
                    });

                    socket.on("broadcastState", (data) => {
                        updateHistoryItemData(data);
                    });
                });

                Vue.onUnmounted(() => {
                    socket.off("whatsappState");
                    socket.off("broadcastState");
                });

                return {
                    form,
                    state,
                    sendMessage,
                    histories,
                    loading,
                    onFileChange
                }
            }
        }).mount("#app");
    </script>
</body>
</html>